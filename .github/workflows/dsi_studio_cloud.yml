name: DSI Studio Cloud
on: 
  workflow_dispatch:
    inputs:
      id:
        description: 'OpenNeuro Accession Number'
        default: ds001021
        required: true
      save_src:
        type: boolean
        default: 'false'
        description: 'Preprocessing: Save SRC Files'
      src_qc:
        type: boolean
        default: 'true'
        description: 'Preprocessing: Quality Check'
      region_analysis:
        type: boolean
        default: 'true'
        description: 'Pipeline: Region Analysis'
      connectivity_matrix:
        type: boolean
        default: 'true'
        description: 'Pipeline: Connectivity Matrix'
      autotrack:
        type: boolean
        default: 'true'
        description: 'Pipeline: Automatic Fiber Tracking'
      atlas:
        description: 'Options: Atlases'
        default: 'HCP-MMP,FreeSurferDKT_Cortical'
        required: false
      tract:
        description: 'Options: Tracts of Interest'
        default: 'Arcuate_Fasciculus_L,Optic_Radiation_L'
        required: false
      
jobs:    
  reconstruction:
    runs-on: ubuntu-18.04
    outputs:
      files: ${{ steps.fib.outputs.files }}
    steps:
      - name: Download ${{ github.event.inputs.id }}
        run: |
          aws s3 sync --no-sign-request --exclude "*" --include "*dwi.*" s3://openneuro.org/${{ github.event.inputs.id }} ${{ github.event.inputs.id }}
          ls * -l    
      - name: Download DSI Studio
        run: |
          curl -sL "https://github.com/frankyeh/DSI-Studio/releases/download/2021.12.03/dsi_studio_ubuntu_1804.zip" | jar x
          chmod 777 ./dsi-studio/dsi_studio
      - name: Create SRC Files
        run: |
          ./dsi-studio/dsi_studio --action=src --source=${{ github.event.inputs.id }}
          mv ./**/*.src.gz .
      - name: Check SRC Quality
        if: ${{ github.event.inputs.src_qc == 'true' }}
        run: |
          ./dsi-studio/dsi_studio --action=qc --source=.
      
      - name: Upload SRC QC report
        if: ${{ github.event.inputs.src_qc == 'true' }}
        uses: actions/upload-artifact@v2.2.4
        with:
          name: openneuro_${{ github.event.inputs.id }}_src_qc
          path: ./qc.txt
          if-no-files-found: error
          retention-days: 90
      
      - name: Upload SRC files
        uses: actions/upload-artifact@v2.2.4
        if: ${{ github.event.inputs.save_src == 'true' }}
        with:
          name: openneuro_${{ github.event.inputs.id }}_src
          path: ./*.src.gz
          if-no-files-found: error
          retention-days: 90
          
      - name: Create FIB Files
        run: |          
          ./dsi-studio/dsi_studio --action=rec --source=*.src.gz --mask=1 --check_btable=0  
      
      - name: Set FIB List
        id: fib
        run: |          
          FIB_LIST=$(ls *.fib.gz | jq -R -s -c 'split("\n")[:-1]')
          echo ::set-output name=files::${FIB_LIST}

      - name: Upload FIB files
        uses: actions/upload-artifact@v2.2.4
        with:
          name: openneuro_${{ github.event.inputs.id }}_fib
          path: ./*.fib.gz
          if-no-files-found: error
          retention-days: 90
          
  region_analysis:
    if: ${{ github.event.inputs.region_analysis == 'true' }}
    needs: reconstruction
    strategy:
      matrix:
        files: ${{ fromjson(needs.reconstruction.outputs.files) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Setup Environment
        uses: ./.github/workflows/download_fib
        with:
          fib_file: openneuro_${{ github.event.inputs.id }}_fib
          
      - name: Analyzing Regions
        run: |
          ./dsi-studio/dsi_studio --action=ana --source=${{ matrix.files }} --atlas=${{ github.event.inputs.atlas }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: openneuro_${{ github.event.inputs.id }}_region_analysis
          path: |
            ./*.txt 
          if-no-files-found: error
          retention-days: 90        
        
  automatic_fiber_tracking:
    if: ${{ github.event.inputs.autotrack == 'true' }}
    needs: reconstruction
    strategy:
      matrix:
        files: ${{ fromjson(needs.reconstruction.outputs.files) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Setup Environment
        uses: ./.github/workflows/download_fib
        with:
          fib_file: openneuro_${{ github.event.inputs.id }}_fib

      - name: AutoTrack
        run: |
          ./dsi-studio/dsi_studio --action=atk --source=${{ matrix.files }} --track_id=${{ github.event.inputs.tract }}
          mv ./**/*.tt.gz .
          mv ./**/*.stat.txt .
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: openneuro_${{ github.event.inputs.id }}_autotrack
          path: |
            ./*.tt.gz 
            ./*.stat.txt 
          if-no-files-found: error
          retention-days: 90
          
  connectivity_matrix:
    if: ${{ github.event.inputs.connectivity_matrix == 'true' }}
    needs: reconstruction
    strategy:
      matrix:
        files: ${{ fromjson(needs.reconstruction.outputs.files) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Setup Environment
        uses: ./.github/workflows/download_fib
        with:
          fib_file: openneuro_${{ github.event.inputs.id }}_fib
          
      - name: Tracking
        run: |
          ./dsi-studio/dsi_studio --action=trk --source=${{ matrix.files }} --fiber_count=1000000 --output=no_file --connectivity=${{ github.event.inputs.atlas }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: openneuro_${{ github.event.inputs.id }}_connectivity_matrix
          path: |
            ./*.mat
            ./*.txt
          if-no-files-found: error
          retention-days: 90
